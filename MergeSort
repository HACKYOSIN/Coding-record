#include<iostream>
#include<vector>
using namespace std;
void merge(vector<int>&arr,int l,int mid,int r){
    int p1=l,p2=mid+1;
    int i=0;
    vector<int> res(r-l+1);
    while(p1<=mid&&p2<=r){
        res[i++]=arr[p1]<arr[p2]?arr[p1++]:arr[p2++];
    }
    while(p1<=mid){
        res[i++]=arr[p1++];
    }
    while(p2<=r){
        res[i++]=arr[p2++];
    }
    for(int j=0;j<i;++j){
        arr[l+j] = res[j];
    }
}
/*#include <iostream>
#include<vector>
using namespace std;

void merge(vector<int> &arr,int l,int mid,int r){
    int p1 = l,p2 = mid+1;
    int i = 0; //指向额外数组的值
    vector<int> res(r-l+1);
    while(p1 <= mid && p2 <= r){
       res[i++] = arr[p1] <= arr[p2] ? arr[p1++] : arr[p2++];
       
    }
    while(p1 <= mid){
        res[i++] = arr[p1++];
    }
    while(p2 <= r){
        res[i++] = arr[p2++];
    }
    for(int j=0;j<i;++j){
        arr[l+j] = res[j];
    }
}*/
void process(vector<int>&arr,int l,int r){
    if(l==r){
        return;
    }
    int mid=l+((r-l)>>1);
    process(arr,  l, mid);
    process(arr,  mid+1,  r);
    merge(arr, l,  mid, r);
}

void mergesort(vector<int>&arr){
    if(arr.size()<2){
        return;
    }
    process(arr, 0, arr.size()-1);
}

int main(){
    int n;
    cin>>n;
    vector<int>arr(n);
    for(int i=0;i<n;++i){
        cin>>arr[i];
    }
    mergesort(arr);
    for(int i=0;i<n;++i){
        cout<<arr[i]<<" ";
        
    }
    cout<<endl;
    return 0;
}
/*#include <iostream>
#include<vector>
using namespace std;

void merge(vector<int> &arr,int l,int mid,int r){
    int p1 = l,p2 = mid+1;
    int i = 0; //指向额外数组的值
    vector<int> res(r-l+1);
    while(p1 <= mid && p2 <= r){
       res[i++] = arr[p1] <= arr[p2] ? arr[p1++] : arr[p2++];
       
    }
    while(p1 <= mid){
        res[i++] = arr[p1++];
    }
    while(p2 <= r){
        res[i++] = arr[p2++];
    }
    for(int j=0;j<i;++j){
        arr[l+j] = res[j];
    }
}
void process(vector<int> &arr,int l,int r){
    if(l == r){
        return;
    }
    int mid = l + ((r - l) >> 1);
    process(arr,l,mid);
    process(arr,mid+1,r);
    merge(arr,l,mid,r);
}
//归并排序
void mergeSort(vector<int> &arr){
    if(arr.size() < 2){
        return;
    }
    process(arr,0,arr.size()-1);
    
}



int main(){
    int n;
    cin >> n;
    vector<int> arr(n);
    for(int i=0;i<n;++i){
        cin >>arr[i];
    }
    mergeSort(arr);
    for(int i=0;i<n;++i){
        cout << arr[i]<< " ";
    }
    cout << endl;
    return 0;
}*/
